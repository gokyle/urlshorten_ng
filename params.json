{"note":"Don't delete this file! It's used internally to help with page regeneration.","body":"`urlshorten` is a simple URL shortening service written in Go. It is based\r\non my [`webshell`](https://gokyle.github.com/webshell) framework, and is a\r\nsimple example of writing a web service that includes templating and\r\nauthentication.\r\n\r\n## Setting Up\r\n\r\nThe `setup/setup` tool should be used to initialise the database. The database\r\nfile defaults to `data/urlshorten.db`. This may be changed in the configuration\r\nfile, but the file has to be specified on the command line for the setup tool.\r\n\r\nThe database should be initialised with `setup -d /path/to/db/file -c` to create\r\nthe database. The `-a` flag adds a user to the database, and `-r` removes the\r\nuser. The `setup` program will prompt for the user name, and, where applicable,\r\nthe password. Note that while the program will create the database file as\r\nneeded, it will not create intermediary directories.\r\n\r\n\r\n## The Configuration File\r\n\r\nConfiguration is done with the [`goconfig`](https://gokyle.github.com/goconfig)\r\npackage. The configuration file consists of two sections: `server` and `page`.\r\n\r\n### `server`\r\nThis section configures the server. It supports the following options:\r\n\r\n* `port`: set the port the server should listen on. Defaults to `8080`.\r\n* `host`: set the host the host the server should listen on. This is\r\nseparate from the `page` option with this name. Defaults to an empty string\r\nto listen on all interfaces.\r\n* `authenticate`: if set to \"false\", turns off checks for authentication. This\r\nis on by default.\r\n* `admin_user`: set the administrative user; this is used to add new users to\r\nthe site. The default is not set; no users can be added via the site.\r\n* `development`: set this to `false` to disable development features; in\r\ndevelopment mode, links are set up as `host:port`. Links in development\r\nmode also use the `http` scheme. If development mode is turned off, links\r\nuse `https` and the port is not included in links. Defaults to `true`.\r\n* `dbfile`: specify the path to the database file. Defaults to\r\n`data/urlshorten.db`.\r\n\r\n### `page`\r\nThis section controls page templates. Valid options are:\r\n\r\n* `title`: sets the page title. Defaults to `urlshorten.go`.\r\n* `host`: the host name to use in links. Defaults to `localhost`. This\r\naffects displayed links to shortcodes only.\r\n\r\n### Example production configuration file:\r\n\r\n```\r\n[server]\r\nport = 8100\r\nhost = 127.0.0.1\r\ndevelopment = false\r\nadmin_user = flynn\r\n\r\n[page]\r\ntitle = nodality.io\r\nhost = nodality.io\r\n```\r\n\r\nThis will set up a server that listens on `127.0.0.1:8080` in production\r\nmode; pages will have an title of `\"nodality.io\"` and links will point to\r\n`https://nodality.io`. The user `flynn` can add new users via the web\r\ninterface.\r\n\r\n## Running The Service\r\n\r\nIt is recommended to run the service behind a proxy; in nginx, you could do\r\nthis with\r\n\r\n```\r\nupstream goweb {\r\n        server 127.0.0.1:8080;\r\n} \r\n\r\nserver {\r\n\tlisten 80;\r\n\tserver_name example.net;\r\n\trewrite ^(.*) https://$host$1 permanent;\r\n}\r\n\r\nserver {\r\n\tlisten 443 ;\r\n\tserver_name example.net\r\n\r\n\taccess_log /var/log/nginx/example_access.log;\r\n\terror_log /var/log/nginx/example_error.log;\r\n\tlocation / {\r\n\t\tproxy_pass http://goweb;\r\n\t}\r\n\r\n        ssl on;\r\n\tssl_certificate /etc/ssl/certs/example.pem;\r\n\tssl_certificate_key /etc/ssl/private/example.key;\r\n\r\n\tssl_session_timeout 5m;\r\n\r\n\tssl_protocols TLSv1;\r\n\tssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:!MEDIUM:!LOW:+SSLv3:+EXP;\r\n\tssl_prefer_server_ciphers on;\r\n\r\n}\r\n```\r\n\r\nIn this case, nginx handles all the TLS aspects and proxies incoming requests.\r\n\r\nThen, navigate to `https://example.net/`. Your passwords may be changed with\r\n`https://example.net/change`. You can add a new user at\r\n`https://example.net/add`.\r\n\r\nThis code is based on an example I wrote without using `webshell`.\r\n","name":"urlshorten-ng","tagline":"Simple URL shortener web service.","google":""}